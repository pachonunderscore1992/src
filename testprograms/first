#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

#define ALL(x) (x).begin(),(x).end()

const string win = "WIN", lose = "LOSE";

class SplitStoneGame {
public:
   string winOrLose(vector <int>);
};


int n;
bool f(vector<int>& v){
   bool sw = false;
   for(int i = 0 ; i < n ; i++){
      if(v[i] > 1){
         for(int j = 0 ; j < n ; j++){
            if(j == i || v[j] == 0){ continue; }
            for(int k = j+1 ; k < n ; k++){
               if(k == i || v[k] == 0){ continue; }
               for(int xx = 1 ; xx < v[i] ; xx++){
                  int l = xx; int r = v[i] - xx;
                  v[j] += l;
                  v[k] += r;
                  sw |= !f(v);
                  v[j] -= l;
                  v[k] -= r;
               }
            }
         }
      }
   }
   return sw;
}

string SplitStoneGame::winOrLose(vector <int> number) {
   n = number.size();
   if( n < 2 ) { return lose; }
   bool sw = f(number);
   return sw ? win : lose;
}

<%:testing-code%>
//Powered by [KawigiEdit] 2.0!
